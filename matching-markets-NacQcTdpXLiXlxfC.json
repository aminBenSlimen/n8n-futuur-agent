{"createdAt":"2025-05-23T23:16:51.584Z","updatedAt":"2025-05-26T18:24:35.000Z","id":"NacQcTdpXLiXlxfC","name":"Matching markets","active":false,"nodes":[{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[580,340],"id":"63d000d2-db78-4812-947e-43629c3535e5","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"B5vI4LnammWPYS3D","name":"OpenAi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[740,320],"id":"18621c26-6f84-4196-b7ed-54bbf4ecf424","name":"Default Data Loader"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[780,480],"id":"ae3ef1b1-dace-4a29-8731-06d81a6c3ec4","name":"Recursive Character Text Splitter"},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents_polymarket","mode":"list","cachedResultName":"documents_polymarket"},"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.1,"position":[660,140],"id":"c012f557-2435-4de2-afe5-354fa31b34e4","name":"Updating RAG","credentials":{"supabaseApi":{"id":"1JS0Mu7Zt7KAYF8s","name":"Supabase account 2"}}},{"parameters":{"content":"## RAGing workflow\nconvert files from Google Sheet into a vector database. [DOCS](https://docs.google.com/spreadsheets/d/1869fgmCVc8S5FgYOuTEg-FO56V99FvOOwvyGbc7C3xc)","height":800,"width":1020},"type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1,"id":"07ddc204-2e07-4f48-840b-bd6a592e6d69","name":"Sticky Note1"},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst transformedData = []\nfor (const item of $input.all()) {\n  const text = `${item.json.Platform} : market ${item.json.Title} of category ${item.json.Category} the outcomes are ${item.json.Outcomes}`\n\n  transformedData.push({text})\n}\n\nreturn transformedData;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[300,180],"id":"58aad336-750c-47e7-b2d7-592063b1156f","name":"Code"},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst transformedData = [];\nfor (const item of $input.all()) {\n  const text = `On ${item.json.provider},${item.json.title},  the outcomes are ${item.json.aggregated_outcomes}`;\n\n  transformedData.push({ text });\n}\n\nreturn transformedData;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[280,380],"id":"8e4d26aa-d4ce-44ac-b404-347bc4b5d296","name":"Code1"},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst transformedData = [];\nfor (const item of $input.all()) {\n  const text = `On ${item.json.provider},${item.json.title},  the outcomes are ${item.json.aggregated_outcomes}`;\n\n  transformedData.push({ text });\n}\n\nreturn transformedData;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[320,600],"id":"63ec4d53-3be0-4b05-940c-ae1a800588b9","name":"Code2"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[1740,80],"id":"8b4d1fff-c919-49b8-a7f8-764a8fcf2af1","name":"When clicking ‘Test workflow’"},{"parameters":{"documentId":{"__rl":true,"value":"17So2o9lqtZZzDHoN24t52wxR3NQRRPjMmrQpA3JWXnE","mode":"id"},"sheetName":{"__rl":true,"value":1434413667,"mode":"list","cachedResultName":"Futuur","cachedResultUrl":"https://docs.google.com/spreadsheets/d/17So2o9lqtZZzDHoN24t52wxR3NQRRPjMmrQpA3JWXnE/edit#gid=1434413667"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[100,180],"id":"b15b9933-751a-4d0e-8ad1-372806330c8c","name":"Futuur","credentials":{"googleSheetsOAuth2Api":{"id":"W9rqycW6ljWg0fNZ","name":"Google Sheets account"}}},{"parameters":{"documentId":{"__rl":true,"value":"17So2o9lqtZZzDHoN24t52wxR3NQRRPjMmrQpA3JWXnE","mode":"id"},"sheetName":{"__rl":true,"value":188273666,"mode":"list","cachedResultName":"Polymarket","cachedResultUrl":"https://docs.google.com/spreadsheets/d/17So2o9lqtZZzDHoN24t52wxR3NQRRPjMmrQpA3JWXnE/edit#gid=188273666"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[100,380],"id":"12053282-c16a-40f5-bf44-c4b14022ea1b","name":"Polymarket","credentials":{"googleSheetsOAuth2Api":{"id":"W9rqycW6ljWg0fNZ","name":"Google Sheets account"}}},{"parameters":{"documentId":{"__rl":true,"value":"17So2o9lqtZZzDHoN24t52wxR3NQRRPjMmrQpA3JWXnE","mode":"id"},"sheetName":{"__rl":true,"value":218157991,"mode":"list","cachedResultName":"Kalshi","cachedResultUrl":"https://docs.google.com/spreadsheets/d/17So2o9lqtZZzDHoN24t52wxR3NQRRPjMmrQpA3JWXnE/edit#gid=218157991"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[100,600],"id":"c7bcf799-ba45-4b01-a4ac-295b90ecb3ae","name":"Kalshi","credentials":{"googleSheetsOAuth2Api":{"id":"W9rqycW6ljWg0fNZ","name":"Google Sheets account"}}},{"parameters":{"promptType":"define","text":"match markets from kalshi and polymarket","options":{"systemMessage":"=You are an expert in grouping prediction markets that refer to the same real-world event.\nYou will receive a list of markets from a vector DB from different platforms using the tool provided get_markets.\nOnce received, your job is to:\n1. Group markets that has the same semantic purpose, but might be written in different format across platforms.eg:\n[\n\"on Polymarket, Trump in jail 2026?, outcomes are yes/no\",\n\"on Kalshi, Trump declare war against China until 2026,outcomes are yes/no\",\n\"on Polymarket, Trump declare war against China until 2026, outcomes are yes/no\"\n]\n1.1 From these markets, market 1 and 2 should be grouped into a market group since they are semantically the same and refer to the same real world event.\n1.2 Although the third market has similar topic about Trump, it does not belong to the same real world event as the first and second markets.\n\n- When grouping multiple markets, generate a single, normalized group title and standardized outcome names that represent the combined meaning of all markets.\n\nFORMATING : return a list of maches, in json format"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[2260,80],"id":"769b2487-9cb3-4bcb-8845-6cccf84afa51","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"value":"o3-mini","mode":"list","cachedResultName":"o3-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2080,420],"id":"7f010b86-1b6c-4c39-8460-cb7de96c0f1a","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"B5vI4LnammWPYS3D","name":"OpenAi account"}}},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[2260,420],"id":"fea354ae-3d88-4693-8fb9-ba51b740cc83","name":"Simple Memory"},{"parameters":{"assignments":{"assignments":[{"id":"400b598e-6ef2-4047-ab53-69c53b609cc3","name":"sessionId","value":"={{ $now }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1960,80],"id":"f0da1d67-3228-4e2c-bd5f-a6af68ef6443","name":"Edit Fields"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[2480,480],"id":"18698ac1-7858-4e80-88ec-cb7115e9952d","name":"Embeddings OpenAI1","credentials":{"openAiApi":{"id":"B5vI4LnammWPYS3D","name":"OpenAi account"}}},{"parameters":{"url":"https://gamma-api.polymarket.com/events","sendQuery":true,"queryParameters":{"parameters":[{"name":"active","value":"=true"},{"name":"closed","value":"=false"},{"name":"limit","value":"500"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[2120,-880],"id":"5c9de90b-10fc-4e50-b48d-2b39873653ab","name":"Polymarket REQUEST"},{"parameters":{"url":"https://api.elections.kalshi.com/trade-api/v2/events","sendQuery":true,"queryParameters":{"parameters":[{"name":"status","value":"=open"},{"name":"with_nested_markets","value":"=true"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[2120,-540],"id":"6c0bdf31-83e5-4937-bfb9-f7a200e06486","name":"Kalshi REQUEST"},{"parameters":{"options":{"fileName":"Polymarket.csv"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[2580,-880],"id":"540793fa-8f62-4fcf-a031-8faba367f373","name":"Convert to File"},{"parameters":{"options":{"fileName":"Kalshi.csv"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[2580,-540],"id":"5bd32d14-d7e3-4685-94db-9a0d0e98d464","name":"Convert to File1"},{"parameters":{"language":"python","pythonCode":"# Loop over input items and add a new field called 'myNewField' to the JSON of each one\noutput = []\nfor item in _input.all():\n  outcomes = []\n  if len(item.json.markets) == 1:\n    # Binary market\n    market = item.json.markets[0]\n    outcome_prices = getattr(market, 'outcomePrices', None)\n    if not outcome_prices:\n      continue\n    \n    yes_probability = float(market.outcomePrices.split('\"')[1]) if outcome_prices else None\n    no_probability = 1 - yes_probability if yes_probability else None\n    outcomes.append({\n      'title': \"Yes\",\n      'probability': yes_probability\n    })\n    outcomes.append({\n      'title': \"No\",\n      'probability': no_probability\n    })\n  else:\n    for o in item.json.markets:\n      title = o.groupItemTitle\n      outcome_prices = getattr(o, 'outcomePrices', None)\n      probability = o.outcomePrices.split('\"')[1] if outcome_prices else None\n      outcomes.append({\n        'title': title,\n        'probability': probability\n      })\n  aggregated_outcomes = ', '.join([item['title'] for item in outcomes])\n  output.append({\n    'provider': \"POLYMARKET\",\n    'external_id': item.json.id,\n    'title': item.json.title,\n    'aggregated_outcomes': aggregated_outcomes,\n    'outcomes': outcomes\n  })\nreturn output"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2340,-880],"id":"9d031b80-999a-46b1-a302-d50319f0b95c","name":"Code3"},{"parameters":{"language":"python","pythonCode":"# Loop over input items and add a new field called 'myNewField' to the JSON of each one\noutput = []\nfor item in _input.all():\n  for event in item.json.events:\n    outcomes = []\n    is_binary = False\n    if len(event.markets) == 1:\n      is_binary = True\n\n    if is_binary:\n      market = event.markets[0]\n      outcomes.append({\n        'title': \"Yes\",\n        'probability': market.last_price\n      })\n      outcomes.append({\n        'title': \"No\",\n        'probability': 100 - market.last_price\n      })\n    else:\n      if not event.mutually_exclusive:\n        continue\n      for o in event.markets:\n        outcome_title = o.title + \" \" + o.subtitle + \" \" + o.yes_sub_title\n        outcome_title = outcome_title.strip()\n        probability = float(o.last_price)\n        if probability > 0:\n          outcomes.append({\n            'title': outcome_title,\n            'probability': o.last_price\n          })\n    aggregated_outcomes = ', '.join([item['title'] for item in outcomes])\n    output.append({\n      'provider': \"KALSHI\",\n      'external_id': event.series_ticker,\n      'title': event.title + \" \" + event.sub_title,\n      'aggregated_outcomes': aggregated_outcomes,\n      'outcomes': outcomes\n    })\nreturn output"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2340,-540],"id":"1e4ca15b-61c1-4040-90a5-b9e9b13e8109","name":"Code4"},{"parameters":{"mode":"retrieve-as-tool","toolName":"get_markets","toolDescription":"use this to get all markets/events","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"topK":100,"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.1,"position":[2460,320],"id":"80e5d549-16fa-40a7-bd90-fec5e6261a75","name":"get_markets","credentials":{"supabaseApi":{"id":"rjHMC84YntzB9Szo","name":"Arbitrage"}}}],"connections":{"Embeddings OpenAI":{"ai_embedding":[[{"node":"Updating RAG","type":"ai_embedding","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Updating RAG","type":"ai_document","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Code":{"main":[[]]},"Code1":{"main":[[{"node":"Updating RAG","type":"main","index":0}]]},"Code2":{"main":[[]]},"When clicking ‘Test workflow’":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Futuur":{"main":[[{"node":"Code","type":"main","index":0}]]},"Polymarket":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Kalshi":{"main":[[{"node":"Code2","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Edit Fields":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"get_markets","type":"ai_embedding","index":0}]]},"Polymarket REQUEST":{"main":[[{"node":"Code3","type":"main","index":0}]]},"Kalshi REQUEST":{"main":[[{"node":"Code4","type":"main","index":0}]]},"Code3":{"main":[[{"node":"Convert to File","type":"main","index":0}]]},"Code4":{"main":[[{"node":"Convert to File1","type":"main","index":0}]]},"get_markets":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"fc692aaf-bdc2-40d3-9524-02d89f57bfce","triggerCount":0,"tags":[]}